---

local:
  ip: "${(NetworkInterface.getNetworkInterfaces().toList().collectMany{ it.getInetAddresses().findAll{it instanceof Inet4Address} }.find{ !(it.getHostAddress() =~ '127[.]0[.]0[.]1|192[.]168[.].*') } ?: InetAddress.getLocalHost()).getHostAddress() }"


#role:
  # public hostname of this server. 
  # for example it could be official address of the nginx server that balancing requests to this server and its clones 
#  host: ${env['HOST_'+ env.ROLE]}
  # public ports (http, https, ...) of the server
#  port: ${ env.findAll{it.key.startsWith('PORT_'+env.ROLE+'_')}.collectEntries{[it.key.substring(env.ROLE.length()+6).toLowerCase(),it.value]} }

## the list of server roles defined with env variables HOST_ and PORT_
# as result we have:
# roles:
#   ids:
#     host: xxx
#     port:
#       https: yyy
roles: |-
  ${
      env.keySet().findAll{it.startsWith('HOST_')}.collect{it.substring(5)}.collectEntries{srv-> 
        [
            srv.toLowerCase(), 
            [
                host: env.find{it.key=='HOST_'+srv}.value,
                port: env.findAll{it.key.startsWith('PORT_'+srv+'_')}.
                        collectEntries{[it.key.substring(6+srv.length()).toLowerCase(),it.value]}
            ]
        ]
      } 
  }

## the parameters of current server known for external users / browsers / servers
role: ${ roles[env.ROLE.toLowerCase()] }

# server:
  # ids:
    # # [id]entity [s]erver
    # # product: wso2is-5.3.0
    # local:
      # host: ${env.ENV_PREFIX}ids${env.ENV_SUFFIX}
      # port:
        # http: 9763
        # https: 9443
    # public:
      # ## public host for local docker-compose is localhost
      # ## and public port is one you defined in docker-compose.yaml service: ports:
      # host: ${env.HOST_IDS}
      # port: 
        # http: "${env.PORT_IDS_HTTP ?: server.ids.local.port.http}"
        # https: "${env.PORT_IDS_HTTPS ?: server.ids.local.port.https}"
  # idx:
    # # [id]entity server analyti[cs]
    # # product: wso2is-analytics-5.3.0
    # local:
      # host: ${env.ENV_PREFIX}idx${env.ENV_SUFFIX}
      # port:
        # http: 9763
        # https: 9443
    # public:
      # ## public host for local docker-compose is localhost
      # ## and public port is one you defined in docker-compose.yaml service: ports:
      # host: ${env.HOST_IDX}
      # port: 
        # http: "${env.PORT_IDX_HTTP ?: server.idx.local.port.http}"
        # https: "${env.PORT_IDX_HTTPS ?: server.idx.local.port.https}"


# common jvm properties

jvm:
  xms: 512m
  xmx: 2048m
  max_perm_size: 256m

# 
log4j:
  DEBUG: ${env.DEBUG ?: 'false'}

# Ports offset. This entry will set the value of the ports defined below to the define value + Offset.
# e.g. Offset=2 and HTTPS port=9443 will set the effective HTTPS port to 9445
carbon:
  offset: 0
  HideAdminServiceWSDLs: true

# conf/identity.xml
identity:
  session_datasource: WSO2_CARBON_DB
  SessionIdleTimeout: 15
  RememberMeTimeout: 20160
  EnableThriftService: false
